{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport * as action from \"../actions/tweetActions\";\nexport const tweetSlicer = createSlice({\n  name: \"tweet\",\n  initialState: {\n    loading: false,\n    allTweets: null,\n    followingTweets: null,\n    tweetById: null,\n    modifiedTweet: null,\n    newTweet: null,\n    newRetweet: null,\n    error: null\n  },\n  extraReducers: {\n    [action.getAllTweets.pending]: state => {\n      state.loading = true;\n    },\n    [action.getFollowingTweets.pending]: state => {\n      state.loading = true;\n    },\n    [action.getTweetById.pending]: state => {\n      state.loading = true;\n    },\n    [action.getAllTweets.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.allTweets = data;\n      } else {\n        state.error = data;\n      }\n    },\n    [action.getFollowingTweets.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.followingTweets = data;\n      } else {\n        state.error = data;\n      }\n      state.loading = false;\n    },\n    [action.getTweetById.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.tweetById = data[0];\n      } else {\n        state.error = data;\n      }\n      state.loading = false;\n    },\n    [action.likeTweet.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.unlikeTweet.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.newRetweet.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.newRetweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.newTweet.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.newTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.newReply.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.newTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.deleteTweet.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.editTweet.fulfilled]: (state, action) => {\n      const {\n        status,\n        data\n      } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    }\n  }\n});\nexport default tweetSlicer.reducer;","map":{"version":3,"names":["createSlice","action","tweetSlicer","name","initialState","loading","allTweets","followingTweets","tweetById","modifiedTweet","newTweet","newRetweet","error","extraReducers","getAllTweets","pending","state","getFollowingTweets","getTweetById","fulfilled","status","data","payload","likeTweet","errors","unlikeTweet","newReply","deleteTweet","editTweet","reducer"],"sources":["D:/ReactWorkspace/TwitterClone/client/src/redux/slicers/tweetSlicer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport * as action from \"../actions/tweetActions\";\n\nexport const tweetSlicer = createSlice({\n  name: \"tweet\",\n  initialState: {\n    loading: false,\n    allTweets: null,\n    followingTweets: null,\n    tweetById: null,\n    modifiedTweet: null,\n    newTweet: null,\n    newRetweet: null,\n    error: null,\n  },\n  extraReducers: {\n    [action.getAllTweets.pending]: (state) => {\n      state.loading = true;\n    },\n    [action.getFollowingTweets.pending]: (state) => {\n      state.loading = true;\n    },\n    [action.getTweetById.pending]: (state) => {\n      state.loading = true;\n    },\n    [action.getAllTweets.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.allTweets = data;\n      } else {\n        state.error = data;\n      }\n    },\n    [action.getFollowingTweets.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.followingTweets = data;\n      } else {\n        state.error = data;\n      }\n      state.loading = false;\n    },\n    [action.getTweetById.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.tweetById = data[0];\n      } else {\n        state.error = data;\n      }\n      state.loading = false;\n    },\n    [action.likeTweet.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.unlikeTweet.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.newRetweet.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.newRetweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.newTweet.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.newTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.newReply.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.newTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.deleteTweet.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n    [action.editTweet.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.modifiedTweet = data;\n      } else {\n        state.errors = data;\n      }\n    },\n  },\n});\n\nexport default tweetSlicer.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}